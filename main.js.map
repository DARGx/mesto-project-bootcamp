{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-bootcamp/./src/components/validate.js","webpack://mesto-project-bootcamp/./src/components/utils.js","webpack://mesto-project-bootcamp/./src/components/profile.js","webpack://mesto-project-bootcamp/./src/components/api.js","webpack://mesto-project-bootcamp/./src/components/modal.js","webpack://mesto-project-bootcamp/./src/components/card.js","webpack://mesto-project-bootcamp/./src/pages/index.js"],"sourcesContent":["export function showError(formElement, inputElement, config) {\r\n  const spanWithError = formElement.querySelector('#error-' + inputElement.id);\r\n  spanWithError.textContent = inputElement.validationMessage;\r\n  inputElement.classList.add(config.inputErrorClass); \r\n}\r\n\r\nexport function hideError(formElement, inputElement, config) {\r\n  const spanWithError = formElement.querySelector('#error-' + inputElement.id);\r\n  spanWithError.textContent = '';\r\n  inputElement.classList.remove(config.inputErrorClass); \r\n}\r\n\r\nexport function hideErrorBeforeOpenForm(formElement, config) {\r\n  Array.from(formElement.querySelectorAll(config.inputSelector)).forEach((inputElement) => {\r\n    hideError(formElement, inputElement, config);\r\n  })\r\n}\r\n\r\nexport function checkInputValidity(formElement, inputElement, config) {\r\n  if (!inputElement.validity.valid) {\r\n    showError(formElement, inputElement, config);\r\n  } else {\r\n    hideError(formElement, inputElement, config);\r\n  }\r\n}\r\n\r\nexport function toggleButton(formElement, buttonSubmitForm) {\r\n  if (formElement.checkValidity()) {\r\n    buttonSubmitForm.disabled = false;\r\n  } else {\r\n    buttonSubmitForm.disabled = true;\r\n  }\r\n}\r\n\r\nexport function setEventListener (formElement, config) {\r\n  const inputList = formElement.querySelectorAll(config.inputSelector);\r\n  const buttonSubmitForm = formElement.querySelector(config.buttonSubmitSelector);\r\n\r\n  toggleButton(formElement, buttonSubmitForm);\r\n  inputList.forEach((input) => {\r\n    input.addEventListener('input', () => {\r\n      checkInputValidity(formElement, input, config);\r\n      toggleButton(formElement, buttonSubmitForm);\r\n    });\r\n  });\r\n}\r\n\r\nexport function enableValidation(config) {\r\n  const formList = document.querySelectorAll(config.formSelector);\r\n  formList.forEach((form) => {\r\n    setEventListener(form, config)\r\n  });\r\n}\r\n","export const popupOpenedGlobal = 'popup_opened';\r\n\r\nexport const popupChangeProfile = document.querySelector('.popup-change-profile');\r\nexport const popupAddCard = document.querySelector('.popup-add-card');\r\nexport const popupOpenImage = document.querySelector('.popup-open-image');\r\nexport const popupChangeAvatar = document.querySelector('.popup-change-avatar');\r\n\r\nexport const popupImage = popupOpenImage.querySelector('.popup__image');\r\nexport const popupTitle = popupOpenImage.querySelector('.popup__title');\r\n\r\nexport const formChangeProfile = document.querySelector('.form-profile')\r\nexport const formAddCard = document.querySelector('.form-card');\r\nexport const formChangeAvatar = document.querySelector('.form-avatar');\r\n\r\n\r\nexport const buttonAddCard = document.querySelector('.profile__button-add');\r\nexport const buttonChangeDescription = document.querySelector('.profile__button-change-descrition');\r\nexport const buttonChangeAvatar = document.querySelector('.profile__button-chage-avatar');\r\n\r\nexport const profileTitle = document.querySelector('.profile__title');\r\nexport const profileSubtitle = document.querySelector('.profile__subtitle');\r\nexport const profileAvatar = document.querySelector('.profile__author-image');\r\n\r\nexport const inputProfileTitle = document.querySelector('.form__input-profile-title');\r\nexport const inputProfileSubtitle = document.querySelector('.form__input-profile-subtitle');\r\nexport const inputCardName = document.querySelector('.form__input-card-name');\r\nexport const inputCardlink = document.querySelector('.form__input-card-link');\r\nexport const inputProfileAvatar = document.querySelector('.form__input-change-avatar');\r\n\r\nexport const cardContainer = document.querySelector('.cards__list');\r\nexport const cardTemplate = document.querySelector('.card-template').content;\r\n\r\n\r\n\r\n\r\nexport const configValidation = {\r\n  formSelector: '.form',\r\n  inputSelector: '.form__input',\r\n  buttonSubmitSelector: '.form__button-update',\r\n  inputErrorClass: 'form__input_error'\r\n};\r\n\r\nexport const buttonSubmitForm = formChangeAvatar.querySelector(configValidation.buttonSubmitSelector);\r\n\r\nexport const buttonSubmitProfile = formChangeProfile.querySelector('.form__button-update');","import {profileSubtitle, profileTitle, profileAvatar} from './utils.js'\n\n\nexport function getProfileData() {\n    return {name: profileTitle.textContent, about:profileSubtitle.textContent}\n}\n\nexport function setProfileData({name, about}) {\n    profileTitle.textContent = name;\n    profileSubtitle.textContent = about;\n}\n\nexport function setAvatarData({avatar}) {\n    profileAvatar.src = avatar;\n}\n\n","// Токен: 359d20cb-40b3-4e51-ae1b-5794952998c3\n// Идентификатор группы: wbf-cohort-9\n\n\nexport const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wbf-cohort-9',\n  headers: {\n    authorization: '359d20cb-40b3-4e51-ae1b-5794952998c3',\n    'Content-Type': 'application/json'\n  }\n}\n\n\nfunction checkResponse(res){\n  if (res.ok) {\n     return res.json(); \n    };\n return res.json() \n   .then((err) => {\n     err.statusCode = res.status;\n    return Promise.reject(err);\n  });\n}\n\n\nconst getCards = () => {\n    return fetch(`${config.baseUrl}/cards`,\n    {\n  headers: config.headers,\n  method: 'GET'\n})\n  .then(checkResponse);   \n}\n\nconst postCard = (data) => {\n  return fetch(`${config.baseUrl}/cards`,\n    {\n  headers: config.headers,\n  method: 'POST',\n  body: JSON.stringify(data)\n})\n  .then(checkResponse);   \n}\n\nfunction deleteCard(idCard) {  \n  // Вместо cardId в URL нужно подставить свойство _id соответствующей карточки.\n  return fetch(`${config.baseUrl}/cards/${idCard}`, {\n    headers: config.headers,\n    method: 'DELETE'\n  })\n  .then(checkResponse);   \n}\n\nconst getProfile = () => {\n  return fetch(`${config.baseUrl}/users/me`,{\n    headers: config.headers,\n    method: 'GET'\n  })\n  .then(checkResponse)   \n}\n\n\nfunction patchProfile(data) {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n    method: 'PATCH',\n    body: JSON.stringify(data)\n  })\n  .then(checkResponse)   \n} \n\n\nfunction patchAvatar(data) {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    headers: config.headers,\n    method: 'PATCH',\n    body: JSON.stringify(data)\n  })\n  .then(checkResponse)   \n} \n\n\n\nfunction putLike(idCard) {  \n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\n    headers: config.headers,\n    method: 'PUT'\n  })\n  .then(checkResponse);   \n}\n\nfunction deleteLike(idCard) {  \n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\n    headers: config.headers,\n    method: 'DELETE'\n  })\n  .then(checkResponse);   \n}\n\nconst api = {\n  getProfile,\n  getCards,\n  patchProfile,\n  postCard,\n  patchAvatar,\n  putLike,\n  deleteLike,\n  deleteCard,\n}\n\nexport {api}\n","import {buttonSubmitForm, popupChangeAvatar, popupOpenedGlobal, inputProfileTitle, inputProfileSubtitle, buttonSubmitProfile, formChangeProfile, configValidation, popupChangeProfile, popupAddCard, formChangeAvatar, inputProfileAvatar} from './utils.js'\r\nimport {hideErrorBeforeOpenForm} from '../components/validate.js'\r\nimport {getProfileData, setProfileData, setAvatarData} from './profile.js' \r\nimport {api} from './api.js'\r\n\r\n\r\n\r\nexport function handleNewCardСlick() {\r\n    openPopup(popupAddCard);\r\n  }\r\n\r\nexport function openPopup(popup) {\r\n    popup.classList.add(popupOpenedGlobal);\r\n    document.addEventListener('keydown',closeWithEscape)\r\n}\r\n  \r\nexport function closePopup(popup) {\r\n    popup.classList.remove(popupOpenedGlobal);\r\n    document.removeEventListener('keydown',closeWithEscape);\r\n}\r\n\r\nexport function closeWithEscape(event) {\r\n    if (event.key === 'Escape') {\r\n        const currentPopup = document.querySelector('.popup_opened');\r\n    closePopup(currentPopup);    \r\n    }\r\n}\r\n\r\nexport function openProfile() {\r\n    const {name, about} = getProfileData();\r\n    inputProfileTitle.value = name;\r\n    inputProfileSubtitle.value = about;\r\n    hideErrorBeforeOpenForm(formChangeProfile, configValidation);\r\n    openPopup(popupChangeProfile);\r\n}\r\n\r\nexport function closeWithClickOnOverlay(event, currentPopup, closingElement) {\r\n    const withinBoundaries = event.composedPath().includes(closingElement);\r\n    if (! withinBoundaries) {\r\n        closePopup(currentPopup);   \r\n    }\r\n};\r\n\r\nexport function renderLoading(isLoading, button, buttonText='Сохранить', loadingText='Сохранение...') {\r\n    if (isLoading) {\r\n      button.textContent = loadingText\r\n    } else {\r\n      button.textContent = buttonText\r\n    }\r\n  }\r\n  \r\n  function handleSubmit(request, evt, buttonText='Сохранить', loadingText = \"Сохранение...\") {\r\n    evt.preventDefault();\r\n  \r\n    const submitButton = evt.submitter;\r\n    const initialText = submitButton.textContent;\r\n    renderLoading(true, submitButton, initialText, loadingText);\r\n    request()\r\n      .then(() => {\r\n        evt.target.reset();\r\n      })\r\n      .catch((err) => {\r\n        console.error(`Ошибка: ${err}`);\r\n      })\r\n      .finally(() => {\r\n        renderLoading(false, submitButton, initialText);\r\n      });\r\n  }\r\n  \r\n\r\nexport function handleProfileSubmit(event) {\r\n    event.preventDefault();\r\n    updateButtonCaption(buttonSubmitProfile,\"Сохранение...\");\r\n\r\n    api.patchProfile({name: inputProfileTitle.value, about:inputProfileSubtitle.value})\r\n    .then((user) => {\r\n      setProfileData(user);\r\n      closePopup(popupChangeProfile);\r\n    })\r\n    .finally(() => {updateButtonCaption(buttonSubmitProfile,\"Сохранить\")})\r\n}\r\n\r\nexport function updateButtonCaption(button, caption) {\r\n    button.textContent = caption;\r\n}\r\n\r\nexport function handleAvatarSubmit(event) {\r\n    event.preventDefault();\r\n    updateButtonCaption(event.submitter, 'Сохранение...');\r\n\r\n    \r\n    api.patchAvatar({avatar: inputProfileAvatar.value})\r\n    .then(avatar => {\r\n        setAvatarData(avatar);\r\n\r\n        closePopup(popupChangeAvatar);\r\n    })\r\n    .finally(() => {updateButtonCaption(event.submitter,\"Сохранить\")})\r\n\r\n}\r\n\r\nexport function handleNewAvatarСlick() {\r\n    hideErrorBeforeOpenForm(formChangeAvatar, configValidation);\r\n    openPopup(popupChangeAvatar);\r\n  }\r\n","import {cardTemplate, inputCardName, inputCardlink, cardContainer, popupAddCard, popupImage, popupTitle, popupOpenImage, formAddCard, configValidation} from './utils.js'\r\nimport {closePopup,openPopup, updateButtonCaption} from './modal.js'\r\nimport {toggleButton} from '../components/validate.js'\r\nimport {api} from './api.js'\r\n\r\n\r\nexport function handleAddCard(event) {\r\n    event.preventDefault();\r\n    updateButtonCaption(event.submitter, 'Добавление...');\r\n\r\n    const newCard = {name: inputCardName.value, link: inputCardlink.value}; \r\n    \r\n\r\n    Promise.all([api.postCard(newCard), api.getProfile()])\r\n    .then(([card,user]) => {\r\n      const {name, about, _id} = user; \r\n      addCard(cardContainer, {name: card.name, link: card.link, massiveLikes: card['likes'], cardId: card['_id'], cardOwner: card['owner'], userAuthorized: user}, 'y');\r\n\r\n      event.target.reset();\r\n      toggleButton(formAddCard, event.submitter);\r\n      closePopup(popupAddCard);\r\n\r\n    })\r\n    .catch((res) => {console.log(res)})\r\n    .finally(() => {updateButtonCaption(event.submitter, \"Добавить\")})\r\n\r\n  }\r\n  \r\nexport function deleteCard(event) {\r\n    event.target.closest('.card').remove();\r\n  }\r\n  \r\n/**\r\nexport function likeCard(event) {\r\n    event.target.classList.toggle('card__button-like_active');\r\n  }\r\n*/\r\n\r\nexport function createCard(card, deleteable) {\r\n\r\n      const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\r\n      const cardElementImage = cardElement.querySelector('.card__image');\r\n      const cardElementTitle = cardElement.querySelector('.card__title');\r\n      const cardButtonLike = cardElement.querySelector('.card__button-like');\r\n      const cardElementLikeNumber = cardElement.querySelector('.card__like-number');\r\n      const cardButtonDelete = cardElement.querySelector('.card__button-delete');\r\n      \r\n      cardElementImage.src = card.link;\r\n      cardElementImage.alt = card.name;\r\n      cardElementTitle.textContent = card.name;\r\n         \r\n      cardElementLikeNumber.textContent = card.massiveLikes['length'];\r\n\r\n      const listLikes = card.massiveLikes.map((liker) => liker['_id'])\r\n      cardElementLikeNumber.id = listLikes;\r\n\r\n      \r\n\r\n      if (listLikes.includes(card.userAuthorized['_id'])) {\r\n        cardButtonLike.classList.add('card__button-like_active') \r\n      }\r\n\r\n      function openImage() {\r\n        popupImage.alt = card.name;\r\n        popupImage.src = card.link;\r\n        popupTitle.textContent = card.name;\r\n        openPopup(popupOpenImage)\r\n      }\r\n\r\n      if (deleteable === 'y') { \r\n        cardButtonDelete.addEventListener('click', (event) => {\r\n          api.deleteCard(card.cardId)\r\n          .then(deleteCard(event))\r\n          .catch(console.dir)\r\n        })\r\n      } else {\r\n        cardButtonDelete.remove();\r\n      }\r\n\r\n      /**\r\n      cardButtonLike.addEventListener('click', (event) => {\r\n        if (listLikes.includes(card.userAuthorized['_id'])) {\r\n          api.putLike(card.cardId)\r\n          .then((res) => {\r\n            cardElementLikeNumber.textContent = res['likes']['length'];\r\n            const listLikes = res['likes'].map((liker) => liker['_id'])\r\n            cardElementLikeNumber.id = listLikes;\r\n            likeCard(event);\r\n          })\r\n          .catch(console.dir)\r\n        } else {\r\n          api.deleteLike(card.cardId)\r\n          .then((res) => {\r\n            cardElementLikeNumber.textContent = res['likes']['length'];\r\n            const listLikes = res['likes'].map((liker) => liker['_id'])\r\n            cardElementLikeNumber.id = listLikes;\r\n            likeCard(event);\r\n          })\r\n          .catch(console.dir)\r\n          }\r\n      })\r\n      */\r\n\r\n      cardButtonLike.addEventListener('click', function () {\r\n        if (cardButtonLike.classList.contains('card__like-button_active')) {\r\n          dislikeCard(cardButtonLike, cardElementLikeNumber)\r\n        } else {\r\n          likeCard(cardButtonLike, cardElementLikeNumber)\r\n        }\r\n      })\r\n\r\n      cardElementImage.addEventListener('click', openImage);\r\n  \r\n      return cardElement;\r\n\r\n      function likeCard(cardButtonLike, cardElementLikeNumber) {\r\n        return api.putLike(card.cardId)\r\n          .then((card) => {\r\n            cardButtonLike.classList.add('card__button-like_active');\r\n            cardElementLikeNumber.textContent = card.likes.length;\r\n          })\r\n          .catch(console.dir)\r\n      }\r\n            \r\n      function dislikeCard(cardButtonLike, cardElementLikeNumber) {\r\n        return api.deleteLike(card.cardId)\r\n          .then((card) => {\r\n            cardButtonLike.classList.remove('card__button-like_active');\r\n            cardElementLikeNumber.textContent = card.likes.length;\r\n          })\r\n          .catch(console.dir)\r\n      }\r\n    }\r\n  \r\nexport function addCard(cardsList, currentCard, deleteable) {\r\n      return cardsList.prepend(createCard(currentCard, deleteable));\r\n}\r\n\r\n\r\n","import './index.css';\r\nimport {enableValidation} from '../components/validate.js'\r\nimport {closePopup, openProfile, closeWithClickOnOverlay, handleProfileSubmit, handleNewCardСlick, handleNewAvatarСlick,handleAvatarSubmit} from '../components/modal.js'\r\nimport {handleAddCard, addCard} from '../components/card.js'\r\nimport {configValidation, popupChangeProfile, formChangeProfile, popupAddCard, formAddCard, formChangeAvatar, cardContainer, buttonAddCard, buttonChangeDescription, popupImage, popupOpenImage, buttonChangeAvatar, popupChangeAvatar} from '../components/utils.js'\r\nimport {api} from '../components/api';\r\nimport {setProfileData,setAvatarData} from '../components/profile';\r\n\r\n\r\n\r\nexport function initialData() {\r\n  Promise.all([api.getCards(), api.getProfile()])\r\n  .then(([cards, user]) => {\r\n    const {name, about, _id} = user; \r\n    setProfileData(user);\r\n    setAvatarData(user);\r\n\r\n    cards.reverse().forEach((card) => {\r\n\r\n      if (user['_id'] === card.owner['_id']) {\r\n        addCard(cardContainer, {name: card.name, link: card.link, massiveLikes: card['likes'], cardId: card['_id'], cardOwner: card['owner'], userAuthorized: user}, 'y');\r\n      } else {\r\n        addCard(cardContainer, {name: card.name, link: card.link, massiveLikes: card['likes'], cardId: card['_id'], cardOwner: card['owner'], userAuthorized: user}, 'n');\r\n      }\r\n    })\r\n  })\r\n  .catch(console.dir)\r\n  .finally(() => {console.log('Попытка загрузки данных завершена')})\r\n}\r\n\r\ninitialData();\r\n\r\nfunction addEventListeners() {\r\n  document.querySelectorAll('.popup__button-hide')\r\n  .forEach((button) => {\r\n    const popup = button.closest('.popup');\r\n    button.addEventListener('click', () => {\r\n      closePopup(popup);\r\n    });\r\n  });\r\n  formAddCard.addEventListener('submit', handleAddCard);\r\n  formChangeProfile.addEventListener('submit', handleProfileSubmit); \r\n  formChangeAvatar.addEventListener('submit', handleAvatarSubmit)\r\n  buttonAddCard.addEventListener('click', handleNewCardСlick);\r\n  buttonChangeDescription.addEventListener('click', openProfile);\r\n  buttonChangeAvatar.addEventListener('click', handleNewAvatarСlick);\r\n\r\n  popupOpenImage.addEventListener('click', (event) => {\r\n    closeWithClickOnOverlay(event, popupOpenImage, popupImage);\r\n  });\r\n\r\n  popupChangeProfile.addEventListener('click', (event) => {\r\n    closeWithClickOnOverlay(event, popupChangeProfile, formChangeProfile);\r\n  });\r\n\r\n  popupAddCard.addEventListener('click', (event) => {\r\n    closeWithClickOnOverlay(event, popupAddCard, formAddCard);\r\n  });\r\n\r\n  popupChangeAvatar.addEventListener('click', (event) => {\r\n    closeWithClickOnOverlay(event, popupChangeAvatar, formChangeAvatar);\r\n  });\r\n}\r\n\r\naddEventListeners();\r\n  \r\n\r\nenableValidation(configValidation);\r\n\r\n\r\n\r\nwindow.addEventListener('unhandledrejection', (evt) => {\r\n  console.error('Необработанная ошибка.\\nМесто возникновения: ');\r\n  console.error(evt.promise);\r\n  console.error('Информация об ошибке:');\r\n  console.error(evt.reason);\r\n});\r\n"],"names":["hideError","formElement","inputElement","config","querySelector","id","textContent","classList","remove","inputErrorClass","hideErrorBeforeOpenForm","Array","from","querySelectorAll","inputSelector","forEach","toggleButton","buttonSubmitForm","checkValidity","disabled","popupOpenedGlobal","popupChangeProfile","document","popupAddCard","popupOpenImage","popupChangeAvatar","popupImage","popupTitle","formChangeProfile","formAddCard","formChangeAvatar","buttonAddCard","buttonChangeDescription","buttonChangeAvatar","profileTitle","profileSubtitle","profileAvatar","inputProfileTitle","inputProfileSubtitle","inputCardName","inputCardlink","inputProfileAvatar","cardContainer","cardTemplate","content","configValidation","formSelector","buttonSubmitSelector","buttonSubmitProfile","setProfileData","_ref","name","about","setAvatarData","_ref2","avatar","src","baseUrl","headers","authorization","checkResponse","res","ok","json","then","err","statusCode","status","Promise","reject","api","getProfile","fetch","concat","method","getCards","patchProfile","data","body","JSON","stringify","postCard","patchAvatar","putLike","idCard","deleteLike","deleteCard","openPopup","popup","add","addEventListener","closeWithEscape","closePopup","removeEventListener","event","key","closeWithClickOnOverlay","currentPopup","closingElement","composedPath","includes","updateButtonCaption","button","caption","addCard","cardsList","currentCard","deleteable","prepend","card","cardElement","cloneNode","cardElementImage","cardElementTitle","cardButtonLike","cardElementLikeNumber","cardButtonDelete","link","alt","massiveLikes","listLikes","map","liker","userAuthorized","cardId","target","closest","catch","console","dir","contains","likes","length","dislikeCard","likeCard","createCard","all","cards","user","_id","reverse","owner","cardOwner","finally","log","preventDefault","submitter","newCard","value","reset","_getProfileData","form","inputList","input","validity","valid","validationMessage","showError","checkInputValidity","setEventListener","enableValidation","window","evt","error","promise","reason"],"sourceRoot":""}